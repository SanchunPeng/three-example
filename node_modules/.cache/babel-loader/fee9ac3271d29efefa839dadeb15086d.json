{"ast":null,"code":"var _jsxFileName = \"/Users/a58/dev/car-test/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport DisplayCar from './components/DisplayCar';\nimport ColorButtonList from './components/ColorButtonList';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.colorChoose = color => {\n      console.log(color);\n      this.setState({\n        currentColor: color\n      });\n    };\n\n    this.state = {\n      fullWidth: 0,\n      fullHeight: 0,\n      colors: ['rgb(255, 0, 0)', 'rgb(255, 255, 255)', 'rgb(197, 210, 203)'],\n      currentColor: ''\n    };\n  }\n\n  componentDidMount() {\n    const root = document.getElementById('root');\n    const width = root.clientWidth;\n    const height = root.clientHeight;\n    this.setState({\n      fullWidth: width,\n      fullHeight: height\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          fullWidth = _this$state.fullWidth,\n          fullHeight = _this$state.fullHeight,\n          colors = _this$state.colors,\n          currentColor = _this$state.currentColor;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      id: \"root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(DisplayCar, {\n      fullWidth: fullWidth,\n      fullHeight: fullHeight,\n      currentColor: currentColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(ColorButtonList, {\n      colors: colors,\n      colorChoose: this.colorChoose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/a58/dev/car-test/src/App.js"],"names":["React","Component","DisplayCar","ColorButtonList","App","constructor","props","colorChoose","color","console","log","setState","currentColor","state","fullWidth","fullHeight","colors","componentDidMount","root","document","getElementById","width","clientWidth","height","clientHeight","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAEzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsBnBC,WAtBmB,GAsBJC,KAAD,IAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAKG,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEJ;AADF,OAAd;AAGD,KA3BkB;;AAEjB,SAAKK,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CADA;AAEXC,MAAAA,UAAU,EAAE,CAFD;AAGXC,MAAAA,MAAM,EAAE,CAAC,gBAAD,EAAmB,oBAAnB,EAAyC,oBAAzC,CAHG;AAIXJ,MAAAA,YAAY,EAAE;AAJH,KAAb;AAMD;;AAEDK,EAAAA,iBAAiB,GAAI;AACnB,UAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;AACA,UAAMC,KAAK,GAAGH,IAAI,CAACI,WAAnB;AACA,UAAMC,MAAM,GAAGL,IAAI,CAACM,YAApB;AACA,SAAKb,QAAL,CAAc;AACZG,MAAAA,SAAS,EAACO,KADE;AAEZN,MAAAA,UAAU,EAACQ;AAFC,KAAd;AAKD;;AAUDE,EAAAA,MAAM,GAAI;AAAA,wBAC8C,KAAKZ,KADnD;AAAA,UACDC,SADC,eACDA,SADC;AAAA,UACUC,UADV,eACUA,UADV;AAAA,UACsBC,MADtB,eACsBA,MADtB;AAAA,UAC8BJ,YAD9B,eAC8BA,YAD9B;AAER,WAAO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEE,SAAvB;AAAkC,MAAA,UAAU,EAAEC,UAA9C;AAA0D,MAAA,YAAY,EAAEH,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAEL,oBAAC,eAAD;AAAiB,MAAA,MAAM,EAAEI,MAAzB;AAAiC,MAAA,WAAW,EAAE,KAAKT,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,CAAP;AAID;;AArCwC","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport DisplayCar from './components/DisplayCar'\nimport ColorButtonList from './components/ColorButtonList'\n\nexport default class App extends Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      fullWidth: 0,\n      fullHeight: 0,\n      colors: ['rgb(255, 0, 0)', 'rgb(255, 255, 255)', 'rgb(197, 210, 203)'],\n      currentColor: ''\n    }\n  }\n\n  componentDidMount () {\n    const root = document.getElementById('root')\n    const width = root.clientWidth\n    const height = root.clientHeight\n    this.setState({\n      fullWidth:width,\n      fullHeight:height\n    })\n\n  }\n\n\n  colorChoose = (color) => {\n    console.log(color)\n    this.setState({\n      currentColor: color\n    })\n  }\n\n  render () {\n    const {fullWidth, fullHeight, colors, currentColor} = this.state\n    return <div className=\"App\" id=\"root\">\n      <DisplayCar fullWidth={fullWidth} fullHeight={fullHeight} currentColor={currentColor}/>\n      <ColorButtonList colors={colors} colorChoose={this.colorChoose}/>\n    </div>\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module"}